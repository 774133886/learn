abs(-121.15)            #绝对值
all([0,1,2,3])           #检测是否所有元素都为TURE
any([0,1,2,3])           #检测是否所有元素都为TURE,与all()相反
ascii()                  #函数类似 repr() 函数, 返回一个表示对象的字符串, 但是对于字符串中的非 ASCII 字符则返回通过 repr() 函数使用 \x, \u 或 \U 编码的字符。 
bin(10)                  #返回一个整数 int 或者长整数 long int 的二进制表示
bool()                  #函数用于将给定参数转换为布尔类型，如果没有参数，返回 False。
bytearray()             #返回一个新字节数组。这个数组里的元素是可变的，并且每个元素的值范围: 0 <= x < 256。
bytes()                 #返回一个新的 bytes 对象，该对象是一个 0 <= x < 256 区间内的整数不可变序列。它是 bytearray 的不可变版本。
callable()              #用于检查一个对象是否是可调用的。如果返回True，object仍然可能调用失败；但如果返回False，调用对象ojbect绝对不会成功。对于函数, 方法, lambda 函式, 类, 以及实现了 __call__ 方法的类实例, 它都返回 True。
chr()                   #用一个范围在 range（256）内的（就是0～255）整数作参数，返回一个对应的字符。
classmethod()           #修饰符对应的函数不需要实例化，不需要 self 参数，但第一个参数需要是表示自身类的 cls 参数，可以来调用类的属性，类的方法，实例化对象等。
class A(object):
    bar = 2
    def func1(self):  
        print ('foo') 
    @classmethod
    def func2(cls):
        print ('func2')
        print (cls.bar)
        cls().func1()   # 调用 foo 方法
A.func2()

compile()               #将一个字符串编译为字节代码。
complex()               #用于创建一个值为 real + imag * j 的复数或者转化一个字符串或数为复数。如果第一个参数为字符串，则不需要指定第二个参数。。
delattr()               #用于删除属性。delattr(x, 'foobar') 相等于 del x.foobar。
dict()                  #用于创建一个字典
dir(A)                  #不带参数时，返回当前范围内的变量、方法和定义的类型列表；带参数时，返回参数的属性、方法列表。如果参数包含方法__dir__()，该方法将被调用。如果参数不包含__dir__()，该方法将最大限度地收集参数信息。
divmod()                #把除数和余数运算结果结合起来，返回一个包含商和余数的元组(a // b, a % b)。
enumerate()             #枚举  用于将一个可遍历的数据对象(如列表、元组或字符串)组合为一个索引序列，同时列出数据和数据下标，一般用在 for 循环当中。
eval()                  #用来执行一个字符串表达式，并返回表达式的值。
exec()                  #储存在字符串或文件中的 Python 语句，相比于 eval，exec可以执行更复杂的 Python 代码。
filter()                #函数用于过滤序列，过滤掉不符合条件的元素，返回一个迭代器对象，如果要转换为列表，可以使用 list() 来转换。
float()                 #用于将整数和字符串转换成浮点数。
format()                #格式化 print("网站名：{name}, 地址 {url}".format(name="菜鸟教程", url="www.runoob.com"))
frozenset()             #返回一个冻结的集合，冻结后集合不能再添加或删除任何元素。
getattr()               #用于返回一个对象属性值。
globals()               #会以字典类型返回当前位置的全部全局变量。
hasattr()               #用于判断对象是否包含对应的属性。  hasattr(object, name)
hash()                  #用于获取取一个对象（字符串或者数值等）的哈希值。
help()                  #用于查看函数或模块用途的详细说明。
hex()                   #用于将10进制整数转换成16进制，以字符串形式表示。
id()                    #用于获取对象的内存地址。
input()                 #接受一个标准输入数据，返回为 string 类型。
int()                   #用于将一个字符串或数字转换为整型。int(x, base=10)  x -- 字符串或数字。base -- 进制数，默认十进制。
isinstance()            #判断一个对象是否是一个已知的类型，类似 type()。isinstance(object, classinfo)。object -- 实例对象。classinfo -- 可以是直接或间接类名、基本类型或者由它们组成的元组。
issubclass()            #用于判断参数 class 是否是类型参数 classinfo 的子类。issubclass(class, classinfo)。如果 class 是 classinfo 的子类返回 True，否则返回 False。
iter()                  #用来生成迭代器。
len()                   #返回对象（字符、列表、元组等）长度或项目个数。
list()                  #用于将元组或字符串转换为列表。
locals()                #会以字典类型返回当前位置的全部局部变量。
map()                   #会根据提供的函数对指定序列做映射。map(function, iterable, ...)第一个参数 function 以参数序列中的每一个元素调用 function 函数，返回包含每次 function 函数返回值的新列表。
max()                   #返回给定参数的最大值，参数可以为序列。
memoryview()            #返回给定参数的内存查看对象(Momory view)。所谓内存查看对象，是指对支持缓冲区协议的数据进行包装，在不需要复制对象基础上允许Python代码访问。
min()                   #返回给定参数的最小值，参数可以为序列。
next()                  #返回迭代器的下一个项目。
oct()                   #将一个整数转换成8进制字符串。
open()                  #用于打开一个文件，并返回文件对象，在对文件进行处理过程都需要使用到这个函数，如果该文件无法被打开，会抛出 OSError。
                        #注意：使用 open() 方法一定要保证关闭文件对象，即调用 close() 方法。open() 函数常用形式是接收两个参数：文件名(file)和模式(mode)。
ord()                   #函数是 chr() 函数（对于8位的ASCII字符串）或 unichr() 函数（对于Unicode对象）的配对函数，它以一个字符（长度为1的字符串）作为参数，返回对应的 ASCII 数值，或者 Unicode 数值，如果所给的 Unicode 字符超出了你的 Python 定义范围，则会引发一个 TypeError 的异常。
pow()                   #返回 xy（x的y次方） 的值。pow(x,y)
print()                 #用于打印输出，最常见的一个函数。
property()              #在新式类中返回属性值。
range()                 #返回的是一个可迭代对象（类型是对象），而不是列表类型， 所以打印的时候不会打印列表。
repr()                  #将对象转化为供解释器读取的形式。
reversed()              #返回一个反转的迭代器。
round()                 #返回浮点数x的四舍五入值。
set()                   #创建一个无序不重复元素集，可进行关系测试，删除重复数据，还可以计算交集、差集、并集等。
setattr()               #对应函数 getattr()，用于设置属性值，该属性必须存在。
slice()                 #实现切片对象，主要用在切片操作函数里的参数传递。
sorted()                #对所有可迭代的对象进行排序操作。
staticmethod            #返回函数的静态方法。 @staticmethod
str()                   #将对象转化为适于人阅读的形式。
sum()                   #对系列进行求和计算。
super()                 #用于调用父类(超类)的一个方法。
tuple()                 #将列表转换为元组。。
type()                  #数如果你只有第一个参数则返回对象的类型，三个参数返回新的类型对象。
vars()                  #返回对象object的属性和属性值的字典对象。
zip()                   #用于将可迭代的对象作为参数，将对象中对应的元素打包成一个个元组，然后返回由这些元组组成的对象，这样做的好处是节约了不少的内存。
__import__()            #用于动态加载类和函数 。